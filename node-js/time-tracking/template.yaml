AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  time-tracking
Globals:
  Function:
    Timeout: 10

Parameters:
  DynamoDBTableName:
    Type: String
    Default: "TimeEntries"
    Description: "Name of DynamoDB table"

Resources:
  TimeTrackingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: index.handler
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      Events:
        Fetch:
          Type: Api
          Properties:
            Path: /fetch
            Method: get
        Update:
          Type: Api
          Properties:
            Path: /update
            Method: post
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "dynamodb:PutItem"
                - "dynamodb:UpdateItem"
                - "dynamodb:GetItem"
                - "dynamodb:Query"
                - "dynamodb:Scan"
              Resource: !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDBTableName}"
      Environment:
        Variables:
          DB_ENDPOINT: ""
          ACCESS_KEY: ""
          SECRET_KEY: ""
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - index.ts

Outputs:
  TimeTrackingApi:
    Description: "API Gateway endpoint URL for TimeTracking function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/time-tracking/"
  TimeTrackingFunctionArn:
    Description: "Time Tracking Lambda Function ARN"
    Value: !GetAtt TimeTrackingFunction.Arn
  TimeTrackingFunctionIamRole:
    Description: "Implicit IAM Role created for Time Tracking function"
    Value: !GetAtt TimeTrackingFunctionRole.Arn
